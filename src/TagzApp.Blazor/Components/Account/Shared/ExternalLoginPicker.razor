@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using TagzApp.Blazor.Services

@inject IdentityRedirectManager RedirectManager

@if (!externalLogins.Any())
{
    <div>
        <p>
            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
            about setting up this ASP.NET application to support logging in via external services</a>.
        </p>
    </div>
}
else
{
    <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
        <div>
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
            <p>
                @foreach (var provider in externalLogins)
                {
                    <button type="submit" class="btn btn-primary mx-1" name="provider" value="@provider" title="Log in using your @provider account">@provider</button>
                }
            </p>
        </div>
    </form>
}

@code {
    private List<string> externalLogins = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {

			var config = ConfigureTagzAppFactory.Current;

			foreach (var provider in Service_ExternalAuthProviders.ExternalProviders)
			{

				if (await DynamicAuthMiddleware.CheckProviderConfiguration(config, provider.Key))
				{
					externalLogins.Add(provider.Key);
				}

			}

    }
}
