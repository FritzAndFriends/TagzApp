@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService AuthorizationService

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta name="color-scheme" content="light dark">
	<title>@ViewData["Title"] - TagzApp.Web</title>
	<link rel="stylesheet" href="~/lib/bootstrap-dark-5/dist/css/bootstrap-dark.min.css">
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/TagzApp.Web.styles.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css" />
	<link rel="stylesheet" href="_content/TagzApp.Providers.Blazot/css/blazot.css" />
	@await RenderSectionAsync("Styles", required: false)
</head>
<body style="overflow: hidden;">

	@if (string.IsNullOrEmpty(ViewBag.EnableFloatingHeader?.ToString()) ? false : ViewBag.EnableFloatingHeader)
	{
		<div id="floatingHeader" class="scrollOut">
			<partial name="_Header" />
		</div>

	} else
	{
		<partial name="_Header" />
	}

	<div class="container" style="max-width: 100%">
		<main role="main" class="pb-3">
			@RenderBody()
		</main>
	</div>

	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/lib/microsoft-signalr/signalr.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>

	@if (string.IsNullOrEmpty(ViewBag.EnableFloatingHeader?.ToString()) ? false : ViewBag.EnableFloatingHeader)
	{
	<script>


		$(document).ready(function () {
			const floatingHeader = document.getElementById("floatingHeader");
			// $(floatingHeader).hover(() => console.log("in"), () => console.log("out"));
			document.getElementById("headerButton").addEventListener("click", function () {
				window.setTimeout(() => {
					floatingHeader.addEventListener("mouseleave", (el) => {
						floatingHeader.classList.remove("scrollIn");
					});
					floatingHeader.addEventListener("click", (el) => {
						floatingHeader.classList.remove("scrollIn");
					});
				}, 3000);
				floatingHeader.classList.add("scrollIn");
			});
		});
	</script>
	}

	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>