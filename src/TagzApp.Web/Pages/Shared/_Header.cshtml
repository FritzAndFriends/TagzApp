@using Microsoft.AspNetCore.Authorization;
@inject IAuthorizationService AuthorizationService
@inject IConfiguration Configuration
@inject IOptions<ApplicationConfiguration> AppConfiguration

<header>
	<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3 bg-body">
		<div class="container">
			<a class="navbar-brand" asp-area="" asp-page="/Index">@AppConfiguration.Value.SiteName</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
							aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
				<ul class="navbar-nav flex-grow-1">
					<li class="nav-item">
						<a class="nav-link" asp-area="" asp-page="/Index">Home</a>
					</li>

					<li class="nav-item">
						<a class="nav-link" asp-area="" asp-page="/Waterfall">Waterfall</a>
					</li>

					@if (Configuration.GetValue<bool>("ModerationEnabled", false) && (await AuthorizationService.AuthorizeAsync(User, Security.Policy.Moderator)).Succeeded)
					{
						<li class="nav-item">
							<a class="nav-link" asp-area="" asp-page="/Moderation">Moderation</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" asp-area="" asp-page="/BlockedUsers">Blocked Users</a>
						</li>
					}
					<li class="nav-item">
						<a class="nav-link" asp-area="" asp-page="/Overlay">Overlay</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" asp-area="" asp-page="/PortraitOverlay">Portrait Overlay</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" asp-area="" asp-page="/Privacy">Privacy</a>
					</li>
				</ul>

				<partial name="_LoginPartial" />

			</div>
		</div>
	</nav>
</header>
