@page
@model TagzApp.Web.Pages.ModerationModel
@{
	Layout = "_WaterfallLayout";
	ViewData["Title"] = "Moderation";
}

<div class="row">
	<div class="col-md-12">
		<h1 class="text-center">Moderate Content for TagzApp (@(Model.Tags.Select(t => $"#{t}").FirstOrDefault() ?? ""))</h1>
	</div>
</div>

<div class="row" style="padding: 0  10px!important;">
	<div class="col-md-6 d-flex align-items-center" style="">
		<span class="col-form-label-sm">Current Moderators:</span>
		<span class="currentModerators">

		</span>
	</div>

	<div class="col-md-6 d-flex justify-content-end align-items-center" >

		@* TODO: Add a badge with a number of currently blocked users *@
		<a class="link-danger me-3" title="Blocked Users" asp-page="/BlockedUsers"><span id="blockedCount">@Model.BlockedUserCount</span> <i class="bi bi-x-circle-fill"></i></a>

		<label for="approved" style="text-wrap: nowrap; margin-right: 1.4em">Approval Status:</label>
		<select id="approved" >
			<option value="-1">All</option>
			<option value="1">Approved Only</option>
			<option value="2">Rejected Only</option>
			<option value="0">Needs Review</option>
		</select>

		<label for="providers" class="px-2">Providers:</label>
		<div class="btn-group" role="group">

			@foreach (var provider in Model.Providers)
			{
				<input type="checkbox" class="btn-check" name="options" id="@provider.Id" checked autocomplete="off">
				<label title="@provider.DisplayName" class="btn btn-outline-primary providerSwitch" for="@provider.Id"><i class="provider bi"></i></label>
			}

		</div>

	</div>

</div>
<div class="row" style="padding: 2px 10px!important">

	<div id="pauseUpdates">
		<i id="pauseButton" class="bi bi-pause-circle-fill text-info"></i>
		<i id="pauseButton-bg" class="bi bi-circle-fill"></i>
	</div>

	<div id="taggedContent" class="">


	</div>

	<div id="moderationAction" style="display: none;">
		<i class="bi bi-check2 approve" title="Approve this content"></i>
		<i class="bi bi-x-circle-fill reject" title="Reject this content"></i>
		<i class="bi bi-journal-text more" title="More Actions"></i>
	</div>

	@section Scripts {

		<script src="~/js/masonry.js" asp-append-version="true"></script>
		<script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
		<script>

			window.TagzApp.ListenForModerationContent("@Model.Tags.FirstOrDefault()");

			window.TagzApp.ActivateKeyboardNavigation();

			window.onload = window.Masonry.resizeAllGridItems();
			window.addEventListener("resize", Masonry.resizeAllGridItems);

			var providers = [];
			var switches = document.querySelectorAll(".providerSwitch");
			switches.forEach(function (sw) {
				var providerId = sw.getAttribute("for");
				var providerClass = window.TagzApp.MapProviderToIconClass(providerId);
				var icon = sw.querySelector(".provider");
				icon.classList.add(providerClass);
				providers.push(providerId);
				// add an event handler on the toggle of the checkbox to call AddProviderFilter or RemoveProviderFilter appropriately
				var checkbox = document.getElementById(providerId);
				checkbox.addEventListener("click", function (e) {
					var providerId = e.target.id;
					window.TagzApp.ToggleProviderFilter(providerId);
				});
			});
			window.TagzApp.InitializeProviderFilter(providers);

			var approved = document.getElementById("approved");
			approved.addEventListener("change", function (e) {
				var value = e.target.value;
				window.TagzApp.FilterByApprovalStatus(value);
			});

		</script>

	}
</div>
