name: code-style-check
on:
  pull_request:
    types: opened
    branches: feature_code_formatter_action

jobs:

  code-formatting:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
    - name: Get git diff
      id: diff
      # TODO: change from feature_code_formatter_action to ${{ github.base_ref }}
      run: |
        git fetch origin feature_code_formatter_action
        {
          echo 'files<<EOF'
          git diff origin/feature_code_formatter_action --name-only --diff-filter=d -- "*.css" "*.js" "*.cs"
          echo EOF
        } >> "$GITHUB_OUTPUT"
    
    - name: Get changed C# files
      id: changed_cs
      run: |
        {
          echo 'files<<EOF'
          echo "${{ steps.diff.outputs.files }}" | grep -E "\.cs$" | paste -sd " "
          echo EOF
        } >> "$GITHUB_OUTPUT"
    - name: Add formatting rules to .editorconfig
      if: steps.changed_cs.outputs.files != ''
      run: |
        echo "" >> src/.editorconfig
        echo "[*.cs]" >> src/.editorconfig
        echo "dotnet_diagnostic.IDE0005.severity = error" >> src/.editorconfig # Remove unnecessary using directives
        echo "dotnet_diagnostic.IDE0090.severity = error" >> src/.editorconfig # Simplify new expression
        echo "dotnet_diagnostic.IDE0003.severity = error" >> src/.editorconfig # this and Me preferences
        echo "dotnet_diagnostic.IDE0009.severity = error" >> src/.editorconfig # this and Me preferences
    - name: Run dotnet format
      if: steps.changed_cs.outputs.files != ''
      id: dotnet-format
      run: |
        echo "Running dotnet format on: ${{ steps.changed_cs.outputs.files }}"
        result=$(dotnet format src/TagzApp.sln --verbosity normal --exclude src/TagzApp.Web/Migrations --include ${{ steps.changed_cs.outputs.files }})
        echo "Format result:"
        echo "$result"
        count=$(echo "$result" | grep -c "Formatted code file" || true)
        echo "Number of files Format formatted: $count"
        echo "count=$count" >> "$GITHUB_OUTPUT"
      
    - name: Get changed JS/CSS files
      id: changed_js_css
      run: |
        {
          echo 'files<<EOF'
          echo "${{ steps.diff.outputs.files }}" | grep -E "\.(js|css)$" | paste -sd " "
          echo EOF
        } >> "$GITHUB_OUTPUT"
    - name: Setup Node
      if: steps.changed_js_css.outputs.files != ''
      uses: actions/setup-node@v3
      with:
        node-version: lts/*
    - name: Run prettier
      if: steps.changed_js_css.outputs.files != ''
      id: prettier
      run: |
        echo "Running prettier on: ${{ steps.changed_js_css.outputs.files }}"
        npm install prettier
        result=$(npx prettier --write --list-different ${{ steps.changed_js_css.outputs.files }})
        echo "Prettier result:"
        echo "$result"
        count=$(echo "$result" | grep -cE "\.(js|css)$" || true)
        echo "Number of files Prettier formatted: $count"
        echo "count=$count" >> "$GITHUB_OUTPUT"

    - name: Commit if changes
      if: steps.prettier.outputs.count > 0 || steps.dotnet-format.outputs.count > 0
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add *.cs *.js *.css
        git commit -m "Applying formatting changes through GitHub Actions"
        git push